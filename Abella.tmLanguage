<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>fileTypes</key>
    <array>
        <string>thm</string>
    </array>
    <!-- <key>foldingStartMarker</key>
    <string>(?x:       # turn on extended mode
                          ^        # a line beginning with
                          \s*      # some optional space
                          [{\[]    # the start of an object or array
                          (?!      # but not followed by
                            .*     # whatever
                            [}\]]  # and the close of an object or array
                            ,?     # an optional comma
                            \s*    # some optional space
                            $      # at the end of the line
                          )
                          |        # ...or...
                          [{\[]    # the start of an object or array
                          \s*      # some optional space
                          $        # at the end of the line
                        )</string>
    <key>foldingStopMarker</key>
    <string>(?x:     # turn on extended mode
                         ^      # a line beginning with
                         \s*    # some optional space
                         [}\]]  # and the close of an object or array
                       )</string> -->
    <key>name</key>
    <string>Abella</string>
    <key>patterns</key>
    <array>

        <dict>
            <key>match</key>
            <string>\b(Import|Specification)\b</string>
            <key>comment</key>
            <string>Vernacular import keywords</string>
            <key>name</key>
            <string>keyword.control.import.abella</string>
        </dict>

        <dict>
            <key>match</key>
            <string>(Theorem)\s+([a-zA-Z][a-zA-Z0-9_']*)</string>
            <key>comment</key>
            <string>Theorem declarations</string>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.source.abella</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.theorem.abella</string>
                </dict>
            </dict>
        </dict>

        <dict>
            <key>begin</key>
            <string>(Split)\s+[a-zA-Z][a-zA-Z0-9_']*\s+(as)</string>
            <key>end</key>
            <string>\.</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.source.abella</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>keyword.source.abella</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.theorem.abella</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.theorem.abella</string>
                </dict>
            </dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>([a-zA-Z][a-zA-Z0-9_']*)</string>
                    <key>captures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>entity.name.function.theorem.abella</string>
                        </dict>
                    </dict>
                </dict>
            </array>
            <key>comment</key>
            <string>Split as declarations</string>
        </dict>

        <dict>
            <key>match</key>
            <string>(Define)\s+([a-zA-Z_][a-zA-Z0-9_']*)</string>
            <key>comment</key>
            <string>Definitions</string>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.source.abella</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.abella</string>
                </dict>
            </dict>
        </dict>

        <dict>
            <key>match</key>
            <string>(Inductive)\s+([a-zA-Z][a-zA-Z0-9_']*)</string>
            <key>comment</key>
            <string>Inductive type declarations</string>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.source.abella</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.type.abella</string>
                </dict>
            </dict>
        </dict>

        <dict>
            <key>match</key>
            <string>(Ltac)\s+([a-zA-Z][a-zA-Z0-9_']*)</string>
            <key>comment</key>
            <string>Ltac declarations</string>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.source.abella</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.ltac</string>
                </dict>
            </dict>
        </dict>

        <dict>
            <key>match</key>
            <string>\b(Set|search_depth|witnesses|on|off|Query)\b</string>
            <key>comment</key>
            <string>Vernacular keywords</string>
            <key>name</key>
            <string>keyword.source.abella</string>
        </dict>

        <dict>
            <key>match</key>
            <string>\b(skip|abort)\b</string>
            <key>comment</key>
            <string>Admits are bad</string>
            <key>name</key>
            <string>invalid.illegal.admit.abella</string>
        </dict>

        <dict>
            <key>match</key>
            <string>:|\||-&gt;|\{|\}|@|\+|#|\*</string>
            <key>comment</key>
            <string>Operators</string>
            <key>name</key>
            <string>keyword.operator.abella</string>
        </dict>

        <dict>
            <key>match</key>
            <string>\b(forall|exists|nabla|type|Kind|Type|prop)\b</string>
            <key>comment</key>
            <string>Type keywords</string>
            <key>name</key>
            <string>support.type.abella</string>
        </dict>

        <dict>
            <key>match</key>
            <string>\b(try|repeat|progress|set|fresh|solve|now|first)\b</string>
            <key>comment</key>
            <string>Ltac keywords</string>
            <key>name</key>
            <string>keyword.control.ltac</string>
        </dict>

        <dict>
            <key>match</key>
            <string>\b(into|with|eqn|by|as|using|to)\b</string>
            <key>comment</key>
            <string>Common Ltac connectors</string>
            <key>name</key>
            <string>keyword.control.ltac</string>
        </dict>

        <dict>
            <key>match</key>
            <string>\b(match|fun|with|returns|end|let|in|if|then|else)\b</string>
            <key>comment</key>
            <string>Gallina keywords</string>
            <key>name</key>
            <string>keyword.control.gallina</string>
        </dict>

        <dict>
            <key>match</key>
            <string>\b(intros|induction|case|assert|split|unfold|exists|left|right|clear|search|backchain|apply|applys|rename|permute)\b</string>
            <key>comment</key>
            <string>Ltac builtins</string>
            <key>name</key>
            <string>support.function.builtin.ltac</string>
        </dict>

        <dict>
            <key>match</key>
            <string>\b(nil|o|olist)\b</string>
            <key>name</key>
            <string>constant.language.nil.gallina</string>
        </dict>

        <dict>
            <key>match</key>
            <string>\bn((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
            <key>name</key>
            <string>constant.numeric.gallina</string>
        </dict>

        <dict>
            <key>match</key>
            <string>\btrue\b</string>
            <key>name</key>
            <string>constant.language.boolean.true.gallina</string>
        </dict>

        <dict>
            <key>match</key>
            <string>\bfalse\b</string>
            <key>name</key>
            <string>constant.language.boolean.false.gallina</string>
        </dict>

        <dict>
            <key>match</key>
            <string>\b_\b</string>
            <key>name</key>
            <string>constant.language.wildcard.abella</string>
        </dict>

        <dict>
            <key>begin</key>
            <string>"</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.begin.abella</string>
                </dict>
            </dict>
            <key>end</key>
            <string>"</string>
            <key>endCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.end.abella</string>
                </dict>
            </dict>
            <key>name</key>
            <string>string.quoted.double.abella</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
                    <key>name</key>
                    <string>constant.character.escape.abella</string>
                </dict>
            </array>
        </dict>


        <dict>
            <key>applyEndPatternLast</key>
            <integer>1</integer>
            <key>begin</key>
            <string>/\*(?!#)</string>
            <key>end</key>
            <string>\*/</string>
            <key>name</key>
            <string>comment.block.abella</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#block_comment</string>
                </dict>
            </array>
        </dict>

        <dict>
            <key>applyEndPatternLast</key>
            <integer>1</integer>
            <key>begin</key>
            <string>%</string>
            <key>end</key>
            <string>\n</string>
            <key>name</key>
            <string>comment.line.abella</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#block_comment</string>
                </dict>
            </array>
        </dict>

    </array>

    <key>repository</key>
    <dict>
        <key>block_comment</key>
        <dict>
            <key>applyEndPatternLast</key>
            <integer>1</integer>
            <key>begin</key>
            <string>\(\*(?!#)</string>
            <key>end</key>
            <string>\*\)</string>
            <key>name</key>
            <string>comment.block.abella</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#block_comment</string>
                </dict>
            </array>
        </dict>
    </dict>

    <key>scopeName</key>
    <string>source.abella</string>
    <key>uuid</key>
    <string>CDE1AD3A-C094-457D-B321-93009C6BCFDB</string>
</dict>
</plist>
